{{- $envAll := set . "Values" (include "interpret-values-gotpl" . | fromJson) -}}
{{/*

Example of a docker-registry Secret.

# kubectl create secret docker-registry registry-secret --docker-server=registry.gitlab.com --docker-username=${GITLAB_USER} --docker-password=${GITLAB_TOKEN}

# kubectl get secret registry-secret -o yaml
apiVersion: v1
data:
  .dockerconfigjson: <base 64 blob>
kind: Secret
metadata:
...
  name: registry-secret
...
type: kubernetes.io/dockerconfigjson

# kubectl get secret registry-secret -o yaml | yq eval '.data[".dockerconfigjson"] | @base64d | fromjson' -o yaml -P
auths:
  registry.gitlab.com:
    username: tmmorin
    password: glpat-XYZ
    auth: <base64 blob>

There again is base64 in there, but it just contains "user:password" concatenated in a single string:

# kubectl get secret registry-secret -o yaml | yq eval '.data[".dockerconfigjson"] | @base64d | fromjson |.auths["registry.gitlab.com"].auth | @base64d' -o yaml -P
tmmorin:glpat-XYZ

*/}}
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
  labels:
{{ include "sylva-units.labels" $envAll | indent 4 }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: |
{{ $auths := dict "auths" .Values.registry_secret }}
{{- range $registry,$auth := .Values.registry_secret -}}
    {{- $_ := set $auth "auth" ((printf "%s:%s" $auth.username $auth.password) | b64enc) -}}
{{- end -}}
{{- $auths | toJson | b64enc | indent 4 -}}
